//1
module top_module (
	input [2:0] SW,      // R
	input [1:0] KEY,     // L and clk
	output [2:0] LEDR);  // Q

    wire D0,D1,D2;
    assign D0 = KEY[1] ? SW[0]:LEDR[2], D1 = KEY[1] ? SW[1]:LEDR[0], D2 = KEY[1] ? SW[2]: LEDR[1]^LEDR[2];
    always @(posedge KEY[0])
        begin
            LEDR[0] <= D0;
            LEDR[1] <= D1;
            LEDR[2] <= D2;
        end

endmodule

//2
module top_module (
	input [2:0] SW,      // R
	input [1:0] KEY,     // L and clk
	output [2:0] LEDR);  // Q

    reg D0,D1,D2; 
    always @(posedge KEY[0])
        begin
            D0 = KEY[1] ? SW[0]:LEDR[2];
            D1 = KEY[1] ? SW[1]:LEDR[0];
            D2 = KEY[1] ? SW[2]: LEDR[1]^LEDR[2];
            LEDR[0] <= D0;
            LEDR[1] <= D1;
            LEDR[2] <= D2;
        end

endmodule
