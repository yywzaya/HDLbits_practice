module top_module(
    input clk,
    input reset,
    input ena,
    output pm,
    output [7:0] hh,
    output [7:0] mm,
    output [7:0] ss); 

    wire [5:1] enable;
    assign enable[1] = ss[3:0]==9 && ena ? 1:0, 
        enable[2] = ss[7:4]==4'b0101 && enable[1] ? 1:0,
        enable[3] = mm[3:0]==9 && enable[2] ? 1:0,
        enable[4] = mm[7:4]==4'b0101 && enable[3] ? 1:0,
        enable[5] = (hh[3:0]==9 || hh[3:0]==2) && enable[4] ? 1:0;
    countd counts0 (clk,reset,ena,4'b1001,ss[3:0]);
    countd counts1 (clk,reset,enable[1],4'b0101,ss[7:4]);
    countd countm0 (clk,reset,enable[2],4'b1001,mm[3:0]);
    countd countm1 (clk,reset,enable[3],4'b0101,mm[7:4]);
    always @(posedge clk)
        begin
            hh[3:0] <= reset ? 2 : (enable[4] ? (hh[3:0] == 9 ? 0 : (hh == 8'b00010010 ? 1 : hh[3:0]+1)): hh[3:0]);
            hh[7:4] <= reset ? 1 : (enable[5] ? (hh[3:0] == 9 ? 1 : (hh == 8'b00010010 ? 0 : hh[7:4])): hh[7:4]);
            pm <= (hh == 8'b0001_0001 && mm == 8'b01011001 && ss == 8'b01011001) ^ pm;
        end
    
endmodule

module countd (input clk,reset,ena,input [3:0] d,output [3:0] q);    
    always @(posedge clk)
        q <= reset ? 0 : (ena ? (q == d ? 0 : q+1) : q);
endmodule
